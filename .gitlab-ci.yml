image: ${BASE_IMAGE}

services:
  - docker:dind

stages:
  - build-prerequisites
  - build
  - test
  - release
  - provision
  - deploy

before_script:
  - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  BASE_IMAGE: ${CI_REGISTRY_IMAGE}/docker-build:${CI_COMMIT_REF_SLUG}

cache:
  paths:
    - .cache/pip

build-base-images:
  image: docker
  stage: build-prerequisites
  script:
    - docker build -t ${BASE_IMAGE} gitlab/dockerfiles/docker-build
    - docker push ${BASE_IMAGE}
  tags:
    - docker
  only:
    - merge_requests

build-ui:
  stage: build
  script:
    - make build-ui
  only:
    - merge_requests

build-crawler:
  stage: build
  script:
    - make build-crawler
  only:
    - merge_requests

test-ui:
  stage: test
  script:
    - make test-ui
  only:
    refs:
      - merge_requests
    changes:
      - src/ui/**/*

test-crawler:
  stage: test
  script:
    - make test-crawler
  only:
    refs:
      - merge_requests
    changes:
      - src/crawler/**/*

release-ui:
  stage: release
  script:
    - make release-ui
  only:
    - merge_requests

release-crawler:
  stage: release
  script:
    - make release-crawler
  only:
    - merge_requests

provision-staging-infra:
  stage: provision
  script:
    - make infra-vars
    - make infra-initialization
    - make infra-workspace
    - make infra-planning
    - make infra-applying
    - make ansible-initialization
    - make provision-docker
  only:
    - branches
  cache:
    key: ${CI_JOB_STAGE}-${CI_COMMIT_REF_SLUG}
    paths:
      - infra/ansible/ssh.conf
      - infra/ansible/vars.auto.yml
      - infra/terraform/vars.auto.tfvars

provision-production-infra:
  stage: provision
  script:
    - make infra-vars
    - make infra-initialization
    - TF_WORKSPACE_TO_SELECT=production make infra-workspace
    - make infra-planning
    - make infra-applying
    - make ansible-initialization
    - make provision-full
  only:
    - ^release-
  except:
    - branches
  cache:
    key: ${CI_JOB_STAGE}-${CI_COMMIT_REF_SLUG}
    paths:
      - infra/ansible/ssh.conf
      - infra/ansible/vars.auto.yml
      - infra/terraform/vars.auto.tfvars

deploy-staging-services:
  stage: deploy
  script:
    - make deploy
  only:
    - branches
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$DOMAIN_NAME/dev/$CI_COMMIT_REF_NAME-swarm-node.europe-west1-b.c.${GOOGLE_PROJECT}.internal
    on_stop: destroy-infra
  cache:
    key: ${CI_JOB_STAGE}-${CI_COMMIT_REF_SLUG}

deploy-production-services:
  stage: deploy
  script:
    - make deploy
  environment:
    name: production
    url: https://$DOMAIN_NAME/
  only:
    - ^release-
  except:
    - branches
  cache:
    key: ${CI_JOB_STAGE}-${CI_COMMIT_REF_SLUG}

destroy-infra:
  stage: deploy
  script:
    - make infra-destroy-planning
    - make infra-applying
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  cache:
    key: ${CI_JOB_STAGE}-${CI_COMMIT_REF_SLUG}
